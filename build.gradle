ext {
    springBootVersion = "1.5.4.RELEASE"
    springVersion = "4.3.9.RELEASE"
    springDataMongoVersion = "1.10.4.RELEASE"
    springBootRedisVersion = "1.4.7.RELEASE"
    springSessionVersion = "1.3.1.RELEASE"
    springCloudVersion = "1.2.2.RELEASE"
    pcap4jVersion = "1.7.1"
}

buildscript {
    ext.springBootVersion = '1.5.4.RELEASE'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework:springloaded:1.2.6.RELEASE'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.SR1'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

allprojects {
    apply plugin: "java"

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.12'
    }
}

project(":spring-session:redis-session") {
    dependencies {
        compile "org.springframework:spring-core:$springVersion"
        compile "org.springframework:spring-context:$springVersion"
        compile "org.springframework:spring-beans:$springVersion"
        compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
        compile "org.springframework.boot:spring-boot-starter-redis:$springBootRedisVersion"
        compile "org.springframework.session:spring-session:$springSessionVersion"
    }
}

project(":spring-data:spring-data-mongo-simple") {
    dependencies {
        compile "org.springframework.data:spring-data-mongodb:$springDataMongoVersion"
        compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
    }
}

project(":spring-cloud:refresh-scope-example") {
    dependencies {
        compile "org.springframework:spring-core:$springVersion"
        compile "org.springframework:spring-context:$springVersion"
        compile "org.springframework:spring-beans:$springVersion"
        compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
        compile "org.springframework.cloud:spring-cloud-starter:$springCloudVersion"
    }
}

project(":spring-boot:boot-simple") {
    dependencies {
        compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
        compile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    }
}

project(":spring-boot:boot-actuator") {
    dependencies {
        compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
        compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
        compile "org.springframework.boot:spring-boot-starter-remote-shell:$springBootVersion"
    }
}

project(":networking:packet-capture") {
    dependencies {
        compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
        compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
        compile "org.pcap4j:pcap4j-core:$pcap4jVersion"
        compile "org.pcap4j:pcap4j-packetfactory-static:$pcap4jVersion"
        compile('org.apache.httpcomponents:fluent-hc:4.5.3')
                { exclude group: 'commons-logging', module: 'commons-logging' }
    }
}

project(":java-gui:javafx-simple") {
    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            resources {
                srcDir 'src/main/resources'
                srcDir 'src/main/java'
            }
        }
    }

    dependencies {
        compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
        compile "org.springframework:spring-core:$springVersion"
        compile "org.springframework:spring-context:$springVersion"
        compile "org.springframework:spring-beans:$springVersion"
        compile 'org.apache.commons:commons-lang3:3.6'
    }
}

project(":integration-testing:spring-boot") {
    bootRun {
        addResources = true
    }

    dependencies {
        compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
        compile "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"
        compile "org.springframework.boot:spring-boot-devtools:$springBootVersion"
        testCompile 'org.fluentlenium:fluentlenium-junit:3.2.0'
        testCompile 'org.fluentlenium:fluentlenium-assertj:3.2.0'
        testCompile 'org.seleniumhq.selenium:htmlunit-driver:2.27'
        testCompile 'org.eclipse.jetty.websocket:websocket-api:9.4.6.v20170531'
        testCompile 'org.eclipse.jetty.websocket:websocket-client:9.4.6.v20170531'
        testCompile 'xml-apis:xml-apis:2.0.2'
        testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    }
}

project(":core-java") {
    dependencies {
        compile 'commons-codec:commons-codec:1.10'
        compile 'com.google.guava:guava:22.0'
    }
}

dependencies {
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-beans:$springVersion"
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.0.pr4'
    compile 'com.basho.riak:riak-client:2.1.1'
    compile 'com.graphql-java:graphql-java:3.0.0'
    compile 'org.apache.commons:commons-lang3:3.6'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}